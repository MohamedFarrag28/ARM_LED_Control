/**********************************************************************************************************************

 *  FILE DESCRIPTION
 *  -------------------------------------------------------------------------------------------------------------------
 *         File:  GPT.h
 *       Module:  GPT
 *
 *  Description:  header file for GPIO PRE    
 *  
 *********************************************************************************************************************/
#ifndef GPT_H
#define GPT_H

/**********************************************************************************************************************
 * INCLUDES
 *********************************************************************************************************************/
#include "Std_Types.h"
#include "../../Common/Mcu_Hw.h"


/**********************************************************************************************************************
 *  GLOBAL CONSTANT MACROS
 *********************************************************************************************************************/


/**********************************************************************************************************************
 *  GLOBAL FUNCTION MACROS
 *********************************************************************************************************************/


/**********************************************************************************************************************
 *  GLOBAL DATA TYPES AND STRUCTURES
 *********************************************************************************************************************/
typedef  uint32 GPT_Value_t ;


typedef enum
{

    GPT_16_32_TIM0,
    GPT_16_32_TIM1,
    GPT_16_32_TIM2,
    GPT_16_32_TIM3,             
    GPT_16_32_TIM4,  
    GPT_16_32_TIM5,
    GPT_32_64_TIM0,
    GPT_32_64_TIM1,         
    GPT_32_64_TIM2,
    GPT_32_64_TIM3,                
    GPT_32_64_TIM4,
    GPT_32_64_TIM5  

}GPT_Channel_t;


typedef enum
{
    One_Shot_Tim_mode=1,
    Periodic_Tim_mode

}GPT_Mode_t;


typedef enum
{

    GPT_CONC_TIM_A_B = 0 ,
    GPT_CONC_TIM_A_B_RTC ,
    GPT_TIM_A_B_Norm = 4 

}GPT_Bits_Config_t;


typedef struct
{
    GPT_Channel_t Channel_id ;
    GPT_Mode_t Channel_Mode ;
    GPT_Bits_Config_t Bits_Num ;
    void(* Call_Back)(void) ;

}GPT_Config_t;

/**********************************************************************************************************************
 *  GLOBAL DATA PROTOTYPES
 *********************************************************************************************************************/


/**********************************************************************************************************************
 *  GLOBAL FUNCTION PROTOTYPES
 *********************************************************************************************************************/

void GPT_Init(const GPT_Config_t* copy_Config_Ptr) ;

void GPT_DisableNotification(GPT_Channel_t copy_Channel);
void GPT_EnableNotification(GPT_Channel_t copy_Channel);

void GPT_StartTimer(GPT_Channel_t copy_Channel,GPT_Value_t copy_Value);
void GPT_StopTimer(GPT_Channel_t copy_Channel);
 
GPT_Value_t GPT_GetTimeElapsed(GPT_Channel_t copy_Channel);
GPT_Value_t GPT_GetTimeRemaining(GPT_Channel_t copy_Channel);

 


/**********************************************************************************************************************
 *  PRIVATE FUNCTION PROTOTYPES
 *********************************************************************************************************************/



#endif  /* GPT_H */

/**********************************************************************************************************************
 *  END OF FILE: GPT.h
 *********************************************************************************************************************/
